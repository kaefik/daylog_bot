"""
–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
"""

from telethon import events, Button
from bot.menu_system import build_menu, bootstrap_default_entries, send_main_menu, init_menu_system
import pytz


# tlgbot –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø–ª–∞–≥–∏–Ω–∞—Ö —á–µ—Ä–µ–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∑–∞–≥—Ä—É–∑–∫—É
tlgbot = globals().get('tlgbot')
logger = globals().get('logger')

# –°—Ç–∞—Ä—ã–π –º–µ—Ö–∞–Ω–∏–∑–º reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∑–∞–º–µ–Ω—ë–Ω –Ω–∞ inline-–º–µ–Ω—é —á–µ—Ä–µ–∑ menu_system.

# –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —á–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞ –¥–ª—è –†–æ—Å—Å–∏–∏ –∏ —Å–æ—Å–µ–¥–Ω–∏—Ö —Å—Ç—Ä–∞–Ω
POPULAR_TIMEZONES = [
    "Europe/Moscow",
    "Europe/Kaliningrad",
    "Europe/Samara",
    "Asia/Yekaterinburg",
    "Asia/Omsk",
    "Asia/Krasnoyarsk",
    "Asia/Irkutsk",
    "Asia/Yakutsk",
    "Asia/Vladivostok",
    "Asia/Magadan",
    "Asia/Kamchatka"
]

def create_timezone_buttons():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏"""
    buttons = []
    current_row = []
    
    for i, tz in enumerate(POPULAR_TIMEZONES):
        # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
        if i % 2 == 0 and i > 0:
            buttons.append(current_row)
            current_row = []
        
        # –ü–æ–ª—É—á–∞–µ–º –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–æ–Ω—ã (—Ç–æ–ª—å–∫–æ –≥–æ—Ä–æ–¥)
        tz_display = tz.split('/')[-1].replace('_', ' ')
        current_row.append(Button.inline(tz_display, data=f"tz:{tz}"))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞—è
    if current_row:
        buttons.append(current_row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –û—Ç–º–µ–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤–Ω–∏–∑—É
    cancel_text = tlgbot.i18n.t('cancel') if hasattr(tlgbot, 'i18n') else "–û—Ç–º–µ–Ω–∞"
    buttons.append([Button.inline(cancel_text, data="tz:cancel")])
    
    return buttons


@tlgbot.on(tlgbot.cmd('start'))
async def start_cmd_plugin(event):
    user_id = event.sender_id
    user = getattr(tlgbot, 'settings', None).get_user(user_id) if getattr(tlgbot, 'settings', None) else None
    lang = getattr(user, 'lang', None) or getattr(tlgbot.i18n, 'default_lang', 'ru')
    try:
        from core.database.manager import DatabaseManager
        from cfg.config_tlg import DAYLOG_DB_PATH
    except ImportError:
        await event.respond("–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ DatabaseManager –∏–ª–∏ DAYLOG_DB_PATH.")
        return

    db = DatabaseManager(db_path=DAYLOG_DB_PATH)
    db_user = db.get_user(user_id)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é (–≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ callback —Ä–æ—É—Ç–µ—Ä–∞)
    init_menu_system(tlgbot, logger)
    bootstrap_default_entries()

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    welcome_message = tlgbot.i18n.t('start_welcome', lang=lang) if hasattr(tlgbot, 'i18n') else "–ü—Ä–∏–≤–µ—Ç! –∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–ª—É—á–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!"
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if not db_user:
        username = getattr(event.sender, 'username', None) if hasattr(event, 'sender') else None
        first_name = getattr(event.sender, 'first_name', None) if hasattr(event, 'sender') else None
        last_name = getattr(event.sender, 'last_name', None) if hasattr(event, 'sender') else None
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–æ–º
        db.create_user(user_id, username=username, first_name=first_name, last_name=last_name)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await event.respond(welcome_message)
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç—Ç–æ–º
        already_registered = tlgbot.i18n.t('diary_user_already_exists', lang=lang) if hasattr(tlgbot, 'i18n') else "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ!"
        combined_message = f"{welcome_message}\n\n{already_registered}"
        await event.respond(combined_message)
    
    # –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–±–æ—Ä —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    timezone_message = tlgbot.i18n.t('timezone_select', lang=lang) if hasattr(tlgbot, 'i18n') else "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:"
    timezone_buttons = create_timezone_buttons()
    
    await event.respond(timezone_message, buttons=timezone_buttons)
    # –°—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é (–ø–æ –∑–∞–ø—Ä–æ—Å—É UX) –µ—â—ë –¥–æ –≤—ã–±–æ—Ä–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
    if hasattr(tlgbot, 'i18n'):
        show_btn = tlgbot.i18n.t('menu_show_button', lang=lang)
    else:
        show_btn = 'üìé Menu'
    try:
        await event.respond(show_btn, buttons=[[Button.text(show_btn, resize=True, single_use=False)]])
    except Exception as e:  # noqa: BLE001
        if logger:
            logger.error(f"start_cmd: early reply menu button send failed: {e}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
@tlgbot.on(events.CallbackQuery(pattern=r'^tz:'))
async def timezone_callback(event):
    user_id = event.sender_id
    user = getattr(tlgbot, 'settings', None).get_user(user_id) if getattr(tlgbot, 'settings', None) else None
    lang = getattr(user, 'lang', None) or getattr(tlgbot.i18n, 'default_lang', 'ru')
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∏–∑ callback data
    callback_data = event.data.decode('utf-8').split(':')[1]
    
    try:
        from core.database.manager import DatabaseManager
        from cfg.config_tlg import DAYLOG_DB_PATH
        
        db = DatabaseManager(db_path=DAYLOG_DB_PATH)
        db_user = db.get_user(user_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –æ—Ç–º–µ–Ω–µ–Ω –≤—ã–±–æ—Ä —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
        if callback_data == "cancel":
            if db_user:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - –Ω–µ –º–µ–Ω—è–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
                cancel_message = tlgbot.i18n.t('timezone_unchanged', lang=lang) if hasattr(tlgbot, 'i18n') else "–¢–µ–∫—É—â–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –æ—Å—Ç–∞–≤–ª–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π."
                await event.edit(cancel_message)
            else:
                # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ú–æ—Å–∫–≤—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                default_timezone = "Europe/Moscow"
                db.update_user_settings(user_id, timezone=default_timezone)
                default_message = tlgbot.i18n.t('timezone_default', lang=lang) if hasattr(tlgbot, 'i18n') else "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (Europe/Moscow)."
                await event.edit(default_message)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
            start_ready = tlgbot.i18n.t('start_ready', lang=lang) if hasattr(tlgbot, 'i18n') else "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –≤–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫!"
            await send_main_menu(event, lang, start_ready)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
        selected_timezone = callback_data
        pytz.timezone(selected_timezone)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.update_user_settings(user_id, timezone=selected_timezone)
        
        timezone_message = tlgbot.i18n.t('timezone_selected', lang=lang, timezone=selected_timezone) if hasattr(tlgbot, 'i18n') else f"–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {selected_timezone}"
        await event.edit(timezone_message)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        start_ready = tlgbot.i18n.t('start_ready', lang=lang) if hasattr(tlgbot, 'i18n') else "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –≤–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫!"
        await send_main_menu(event, lang, start_ready)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞: {e}")
        error_message = tlgbot.i18n.t('timezone_error', lang=lang) if hasattr(tlgbot, 'i18n') else "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞."
        await event.edit(error_message)
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        start_ready = tlgbot.i18n.t('start_ready', lang=lang) if hasattr(tlgbot, 'i18n') else "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –≤–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫!"
        await send_main_menu(event, lang, start_ready)
