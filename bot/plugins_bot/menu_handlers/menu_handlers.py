"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
"""

from telethon import events
from bot.require_diary_user import require_diary_user

# tlgbot –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø–ª–∞–≥–∏–Ω–∞—Ö —á–µ—Ä–µ–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∑–∞–≥—Ä—É–∑–∫—É
tlgbot = globals().get('tlgbot')
logger = globals().get('logger')

def safe_call_command(shortname: str, handler_name: str, event):
    """–í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∏–∑ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞.

    –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π import (–ª–æ–º–∞–µ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã, tlgbot –º–æ–∂–µ—Ç –±—ã—Ç—å None).
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ –≤—ã–∑–æ–≤ —Å–¥–µ–ª–∞–Ω.
    """
    try:
        plugins = getattr(tlgbot, '_plugins', {})
        mod = plugins.get(shortname)
        if not mod:
            logger.error(f"menu_handler: plugin '{shortname}' not found in loaded plugins")
            return False
        handler = getattr(mod, handler_name, None)
        if not handler:
            logger.error(f"menu_handler: handler '{handler_name}' not found in plugin '{shortname}'")
            return False
        # –í—ã–∑–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        return handler(event)
    except Exception as e:
        logger.error(f"menu_handler: error in safe_call_command {shortname}.{handler_name}: {e}")
        return False

def get_menu_text(key, lang='ru'):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é"""
    if hasattr(tlgbot, 'i18n'):
        return tlgbot.i18n.t(key, lang=lang)
    
    # –§–æ–ª–ª–±–µ–∫ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    fallbacks = {
        'menu_today': "üìù –°–µ–≥–æ–¥–Ω—è",
        'menu_yesterday': "üìÖ –í—á–µ—Ä–∞", 
        'menu_view': "üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä",
        'menu_export': "üì§ –≠–∫—Å–ø–æ—Ä—Ç"
    }
    return fallbacks.get(key, "")

@tlgbot.on(events.NewMessage)
@require_diary_user
async def menu_handler(event):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    user_id = event.sender_id
    user = getattr(tlgbot, 'settings', None).get_user(user_id) if getattr(tlgbot, 'settings', None) else None
    lang = getattr(user, 'lang', None) or getattr(tlgbot.i18n, 'default_lang', 'ru')
    
    message_text = event.message.text.strip()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
    today_text = get_menu_text('menu_today', lang)
    yesterday_text = get_menu_text('menu_yesterday', lang)
    view_text = get_menu_text('menu_view', lang)
    export_text = get_menu_text('menu_export', lang)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∏–∑ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    if message_text == today_text:
        # –ü–æ–¥–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
        try:
            event.message.text = '/today'
            event.text = '/today'
        except Exception:
            pass
        coro = safe_call_command('today', 'today_handler', event)
        if coro:
            await coro
        raise events.StopPropagation
    elif message_text == yesterday_text:
        try:
            event.message.text = '/yesterday'
            event.text = '/yesterday'
        except Exception:
            pass
        coro = safe_call_command('yesterday', 'yesterday_handler', event)
        if coro:
            await coro
        raise events.StopPropagation
    elif message_text == view_text:
        # –ü–æ–¥–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã handler –Ω–µ –ø—ã—Ç–∞–ª—Å—è –ø–∞—Ä—Å–∏—Ç—å "üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä"
        try:
            event.message.text = '/view'
            event.text = '/view'
        except Exception:
            pass
        coro = safe_call_command('view', 'view_command_handler', event)
        if coro:
            await coro
        else:
            # fallback: –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞, –º–æ–∂–Ω–æ —ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å /view help
            logger.error("menu_handler: view_handler not found; –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –º–µ–Ω—é")
        raise events.StopPropagation
    elif message_text == export_text:
        coro = safe_call_command('export', 'export_command_handler', event)
        if coro:
            await coro
        raise events.StopPropagation
    
    # –ù–µ –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é ‚Äî –Ω–µ –º–µ—à–∞–µ–º –¥—Ä—É–≥–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º (–ø–æ–∑–≤–æ–ª—è–µ–º /setlang –∏ –¥—Ä. —Ä–∞–±–æ—Ç–∞—Ç—å)
    return